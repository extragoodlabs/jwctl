name: Build and release

on:
  push:
    branches:
      - trunk
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - trunk

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: rustup set profile default
      - name: Run cargo check
        run: cargo fmt --all -- --check
      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: rustup set profile minimal
      - name: Run cargo test
        run: cargo test

  build:
    name: build ${{ matrix.target }}
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - test
      - lint
    strategy:
      fail-fast: false
      matrix:
        target:
          # 64-bit macOS
          - x86_64-apple-darwin
          # 64-bit MinGW (Windows 7+)
          - x86_64-pc-windows-gnu
          # 64-bit Linux
          - x86_64-unknown-linux-gnu
          # ARM64 Linux
          - aarch64-unknown-linux-gnu
          # ARM64 macOS
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        run: |
          rustup set profile minimal
          rustup target add ${{ matrix.target }}
      - name: Compile release
        run: cargo build --verbose --release --target ${{ matrix.target }}
      - name: Create archive
        run: tar caf jwctl-${{ matrix.target }}.tar.gz target/${{ matrix.target }}/release/jwctl
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: jwctl-release
          path: jwctl-${{ matrix.target }}.tar.gz

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: jwctl-release
          path: release/
      - name: Publish release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: release/*
